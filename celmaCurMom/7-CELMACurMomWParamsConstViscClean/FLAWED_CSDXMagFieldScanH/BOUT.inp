#
# Input file for "7-CELMACurMomWParamsConstViscClean/FLAWED_CSDXMagFieldScanH"
#
# x - The radial coordinate (rho)
# y - The height of the cylinder (z)
# z - The azimuthal coordinate (theta)

# Root options
###############################################################################
nout = 1         # Number of output timesteps
timestep = 1e-10 # Time between outputs

dump_format="nc" # Write NetCDF format files

# Setting the z coordinate
ZMIN = 0.0
ZMAX = 1.0 # dz = 2*pi(ZMAX - ZMIN)/(MZ - 1)

# Number of guard cells
MXG = 1
MYG = 1
###############################################################################



# Mesh options
###############################################################################
[mesh]
# Number of points
nx = 32 + 2*MXG
ny = 66
nz = 256           # O=2*pi*r, so on edge nz/rho_s = nz/(2*pi*r)
# The grid spacing
# As the points are located half between grid points, there will be as many
# line segments as points
# NOTE: We must divide by INNER POINTS (different definition of nx and ny)
dx = geom:Lx/(nx-2*MXG)
dy = geom:Ly/(ny)
# The metrics
g33 = 1/(geom:xl^2)
J = geom:xl
# Puts the boundaries half a step outside the last gridpoints
symmetricGlobalY=true
symmetricGlobalX=true
# Position of the separatrix
# Points 0 <= x < ixseps1 are inside separatrix, ixseps1 <= x < ngx outside
# --------Non-periodic----------
ixseps1 = -1
ixseps2 = -1
# ------------------------------
###############################################################################



# Methods options
###############################################################################
# Methods used for the radial (x) derivative terms
[ddx]
first  = C2 # d/dx (f)
second = C2 # d^2/dx^2 (f)
upwind = U1 # u*d/dx (f)

#Methods used for the axial (y) derivative terms
[ddy]
first  = C2 # d/dy (f)
second = C2 # d^2/dy^2 (f)
upwind = U1 # u*d/dy (f)

#Methods used for the azimuthal (z) derivative terms
[ddz]
first  = FFT # d/dz (f)
second = FTT # d^2/dz^2 (f)
###############################################################################



# Solver settings
###############################################################################
[solver]
# The solver advances the system in time
type = cvode             # Which solver to use (cvode should be same as pvode)
mms  = false             # false by default

atol = 1.0e-10 # absolute tolerance
rtol = 1.0e-5  # relative tolerance

# cvode, pvode and rk4 options
# NOTE: If this is set too high, the computer MIGHT interpret it as 0
mxstep = 100000000
###############################################################################



# Specifying the switches
###############################################################################
# Output
# =============================================================================
[output]
floats = false # floats = false => output in double
# =============================================================================


# Switches
# =============================================================================
[switch]
includeNoise        = false
forceAddNoise       = false
useHyperViscAzVortD = true
saveTerms           = true
saveDdt             = true
constViscPar        = true
constViscPerp       = true
constViscHyper      = false
viscosityGuard      = false
# =============================================================================
###############################################################################



# Parameter input
###############################################################################
# Input
# =============================================================================
[input]
# NOTE:
#       Dimensions: Burin et al 2005 PoP
#       Ionization: Burin et al 2005 PoP
#       n0 and Te : Bohlin et al 2014 Rev Sci Instr
radius = 0.020   # The length of x from boundary to boundary in [m]
length = 2.80    # The length of y from boundary to boundary in [m]
n0     = 5.0e17  # m^-3
Te0    = 6.0     # eV
Ti0    = 0.0     # eV
B0     = 0.1     # T
Sn     = 4.5e21  # m^-3s^-1
nn     = n0*10   # m^-3 (10 % ionization)
# =============================================================================


# Geometry
# =============================================================================
[geom]
Lx =    7.9912 # The normalized radius (must agree with radius up to fourth decimal)
Ly = 1118.7646 # The normalized length (must agree with len up to fourth decimal)

xl = x * geom:Lx            # x in range [0,Lx]
yl = y * geom:Ly / (2.0*pi) # y in range [0,Ly]

minPointsPerRhoSY = 1e-3
# =============================================================================


# Viscosities
# =============================================================================
[visc]
# Parallel artificial viscosity
artPar = 40                # From 4.0/B=0.08 (actually scales with 1/B)
artViscParLnN     = artPar # Density
artViscParJPar    = artPar # Electron velocity
artViscParMomDens = artPar # Ion velocity
artViscParVortD   = 1.0e-1 # Modified vorticity. From 1-CELMACurMom/PBSDriver-3-d-1.0-ViscPerpScanRestart31a0

# Perpendicular artificial viscosity
artPerp = 3.0e-3             # From 4.0/B=0.08 (actually scales with 1/B)
artViscPerpLnN     = artPerp
artViscPerpJPar    = artPerp
artViscPerpMomDens = artPerp
artViscPerpVortD   = 2.4e-4  # From 1-CELMACurMom/PBSDriver-3-d-1.0-ViscPerpScanRestart31a0

# Azimuthal hyper viscosity
artHyperAzVortD = 16.0
# =============================================================================


# The source
# =============================================================================
[theSource]
# Radial profile
radialWidth     = 0.5*2*geom:Lx
radialCentre    = 0
radialSteepness = 5/geom:Lx
radialProf      = tanhhat(geom:xl, theSource:radialWidth, theSource:radialCentre, theSource:radialSteepness)
# Parallel profile
parProf = 1.0
# Source
S = radialProf*parProf
# =============================================================================
###############################################################################



# Own classes options
###############################################################################
# The solver
# =============================================================================
[phiSolver]
# Inner boundary flag is set to be cylinder like (see the manual for the
# numbers)
inner_boundary_flags = 1024
# Outer boundary flag
# 0 - dirichlet 0 is used
outer_boundary_flags = 0
include_yguards = false # Do invert for the boundary cells
global_flags = 4        # Only one guard in the x boundary for inner and outer
# Filtering (default 0)
filter = 0.0 # Filtering will happen after the inversion is done
# Options to the NaulinSolver
maxit = 1e6
# =============================================================================

# Own filters
# =============================================================================
[ownFilters]
type = radialLowPass
# =============================================================================

# Own operators
# =============================================================================
[ownOperators]
type = BasicBrackets
# =============================================================================
##############################################################################



# Settings for the variables
###############################################################################
# Logarithm of the density
# =============================================================================
[lnN]
scale    = 1.0
function = 0.0

# Boundaries
bndry_xin   = none             # Manual boundary found in the code
bndry_xout  = neumann_o4(0.0)  # Set to neumann
bndry_yup   = neumann_o4(0.0)  # Assume zero gradients at sheat
bndry_ydown = neumann_o4(0.0)  # Do not allow gradients at the source
# =============================================================================


# Parallel current
# =============================================================================
[jPar]
scale       = 1.0
function    = 0.0               # Assuming no difference in currents

# Boundaries
bndry_xin   = none              # Manual boundary found in code
bndry_xout  = neumann_o4(0.0)   # Set to neumann
bndry_yup   = none              # Set in the source code
bndry_ydown = dirichlet_o4(0.0) # Stagnation point
# =============================================================================


# Parallel denisty momentum
# =============================================================================
[momDensPar]
scale = 1.0
uIPar = geom:yl/geom:Ly     # Assuming linear velocity profile
function = exp(lnN:function)*uIPar

# Boundaries
bndry_xin   = none              # Manual boundary found in code
bndry_xout  = neumann_o4(0.0)   # Set to neumann
bndry_yup   = none              # Set manually in the code
bndry_ydown = dirichlet_o4(0.0) # Stagnation point
# =============================================================================


# Non-boussinesq vorticity
# =============================================================================
[vortD]
scale       = 1.0
function    = 0.0               # Initial vorticity (set in the code)
# Boundaries
bndry_xin   = none              # Manual boundary found in the code
bndry_xout  = neumann_o4(0.0)   # Set to neumann
bndry_yup   = neumann_o4(0.0)
bndry_ydown = neumann_o4(0.0)   # Location of density source
# =============================================================================


# The density n
# =============================================================================
[n]
# Boundaries used when setting jPar and momDensPar
bndry_xin   = none
bndry_xout  = none
bndry_yup   = neumann_o4(0.0)
bndry_ydown = none
# =============================================================================


# The parallel ion velocity
# =============================================================================
[uIPar]
# Boundaries used when setting jPar and momDensPar
bndry_xin   = none
bndry_xout  = none
bndry_yup   = dirichlet_o4(1.0) # Sheath BC
bndry_ydown = none
# =============================================================================


# The potential phi
# =============================================================================
[phi]
# Boundaries of the iterative scheme set in the Naulin solver
function    = 0.0
# =============================================================================
###############################################################################
