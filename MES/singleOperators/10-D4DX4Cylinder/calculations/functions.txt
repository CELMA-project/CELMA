Mixmode
======================================================================================================================================
# Mixmode

# Mutliply with a mix of modes
# Multiply with a tanh in order to make the variation in x more homogeneous
the_vars['f'] = 6+((x/(Lx))**3)*\
                cos(2*z)*\
                (
                   cos(2*pi*(x/Lx)) + sin(2*pi*(x/Lx))
                 + cos(3*2*pi*(x/Lx)) + cos(2*2*pi*(x/Lx))                
                )\
                *(1/2)*(1-tanh((1/8)*(x-10)))
                

[S]
geom:xl^2*(-1.35480702467442e-14*pi^4*geom:xl^4*(tanh(0.125*geom:xl - 1.25) - 1)*(sin(pi*geom:xl/15) + 3*cos(pi*geom:xl/15) + 32*cos(2*pi*geom:xl/15) + 81*cos(pi*geom:xl/5)) - 2.67918381344307e-12*geom:xl^4*(tanh(0.125*geom:xl - 1.25)^2 - 1)^2*(sin(pi*geom:xl/15) + 3*cos(pi*geom:xl/15) + 2*cos(2*pi*geom:xl/15) + cos(pi*geom:xl/5))*tanh(0.125*geom:xl - 1.25) - 7.14449016918153e-13*pi*geom:xl^4*(tanh(0.125*geom:xl - 1.25)^2 - 1)^2*(3*sin(pi*geom:xl/15) + 4*sin(2*pi*geom:xl/15) + 3*sin(pi*geom:xl/5) - cos(pi*geom:xl/15)) - 1.33959190672154e-12*geom:xl^4*(tanh(0.125*geom:xl - 1.25)^2 - 1)*(sin(pi*geom:xl/15) + 3*cos(pi*geom:xl/15) + 2*cos(2*pi*geom:xl/15) + cos(pi*geom:xl/5))*tanh(0.125*geom:xl - 1.25)^3 + 5.71559213534522e-13*pi^2*geom:xl^4*(tanh(0.125*geom:xl - 1.25)^2 - 1)*(sin(pi*geom:xl/15) + 3*cos(pi*geom:xl/15) + 8*cos(2*pi*geom:xl/15) + 9*cos(pi*geom:xl/5))*tanh(0.125*geom:xl - 1.25) - 1.42889803383631e-12*pi*geom:xl^4*(tanh(0.125*geom:xl - 1.25)^2 - 1)*(3*sin(pi*geom:xl/15) + 4*sin(2*pi*geom:xl/15) + 3*sin(pi*geom:xl/5) - cos(pi*geom:xl/15))*tanh(0.125*geom:xl - 1.25)^2 + 1.01610526850582e-13*pi^3*geom:xl^4*(tanh(0.125*geom:xl - 1.25)^2 - 1)*(3*sin(pi*geom:xl/15) + 16*sin(2*pi*geom:xl/15) + 27*sin(pi*geom:xl/5) - cos(pi*geom:xl/15)) - 4.87730528882792e-12*pi^3*geom:xl^3*(tanh(0.125*geom:xl - 1.25) - 1)*(3*sin(pi*geom:xl/15) + 16*sin(2*pi*geom:xl/15) + 27*sin(pi*geom:xl/5) - cos(pi*geom:xl/15)) + 6.43004115226338e-11*geom:xl^3*(tanh(0.125*geom:xl - 1.25)^2 - 1)^2*(sin(pi*geom:xl/15) + 3*cos(pi*geom:xl/15) + 2*cos(2*pi*geom:xl/15) + cos(pi*geom:xl/5)) + 1.28600823045268e-10*geom:xl^3*(tanh(0.125*geom:xl - 1.25)^2 - 1)*(sin(pi*geom:xl/15) + 3*cos(pi*geom:xl/15) + 2*cos(2*pi*geom:xl/15) + cos(pi*geom:xl/5))*tanh(0.125*geom:xl - 1.25)^2 - 2.74348422496571e-11*pi^2*geom:xl^3*(tanh(0.125*geom:xl - 1.25)^2 - 1)*(sin(pi*geom:xl/15) + 3*cos(pi*geom:xl/15) + 8*cos(2*pi*geom:xl/15) + 9*cos(pi*geom:xl/5)) + 1.02880658436214e-10*pi*geom:xl^3*(tanh(0.125*geom:xl - 1.25)^2 - 1)*(3*sin(pi*geom:xl/15) + 4*sin(2*pi*geom:xl/15) + 3*sin(pi*geom:xl/5) - cos(pi*geom:xl/15))*tanh(0.125*geom:xl - 1.25) + 5.48696844993141e-10*pi^2*geom:xl^2*(tanh(0.125*geom:xl - 1.25) - 1)*(sin(pi*geom:xl/15) + 3*cos(pi*geom:xl/15) + 8*cos(2*pi*geom:xl/15) + 9*cos(pi*geom:xl/5)) - 3.85802469135803e-9*geom:xl^2*(tanh(0.125*geom:xl - 1.25)^2 - 1)*(sin(pi*geom:xl/15) + 3*cos(pi*geom:xl/15) + 2*cos(2*pi*geom:xl/15) + cos(pi*geom:xl/5))*tanh(0.125*geom:xl - 1.25) - 2.05761316872428e-9*pi*geom:xl^2*(tanh(0.125*geom:xl - 1.25)^2 - 1)*(3*sin(pi*geom:xl/15) + 4*sin(2*pi*geom:xl/15) + 3*sin(pi*geom:xl/5) - cos(pi*geom:xl/15)) + 2.19478737997257e-8*pi*geom:xl*(tanh(0.125*geom:xl - 1.25) - 1)*(3*sin(pi*geom:xl/15) + 4*sin(2*pi*geom:xl/15) + 3*sin(pi*geom:xl/5) - cos(pi*geom:xl/15)) + 4.11522633744856e-8*geom:xl*(tanh(0.125*geom:xl - 1.25)^2 - 1)*(sin(pi*geom:xl/15) + 3*cos(pi*geom:xl/15) + 2*cos(2*pi*geom:xl/15) + cos(pi*geom:xl/5)) - 2.46913580246914e-7*(tanh(0.125*geom:xl - 1.25) - 1)*(sin(pi*geom:xl/15) + 3*cos(pi*geom:xl/15) + 2*cos(2*pi*geom:xl/15) + cos(pi*geom:xl/5)))*cos(2*z)

[neumann]
6.85871056241427e-10*geom:xl^6*(-tanh(0.125*geom:xl - 1.25) + 1)*(-pi*sin(pi*geom:xl/15)/5 - 4*pi*sin(2*pi*geom:xl/15)/15 - pi*sin(pi*geom:xl/5)/5 + pi*cos(pi*geom:xl/15)/15)*cos(2*z) + 6.85871056241427e-10*geom:xl^6*(0.125*tanh(0.125*geom:xl - 1.25)^2 - 0.125)*(sin(pi*geom:xl/15) + 3*cos(pi*geom:xl/15) + 2*cos(2*pi*geom:xl/15) + cos(pi*geom:xl/5))*cos(2*z) + 4.11522633744856e-9*geom:xl^5*(-tanh(0.125*geom:xl - 1.25) + 1)*(sin(pi*geom:xl/15) + 3*cos(pi*geom:xl/15) + 2*cos(2*pi*geom:xl/15) + cos(pi*geom:xl/5))*cos(2*z)

[f]
6.85871056241427e-10*geom:xl^6*(-tanh(0.125*geom:xl - 1.25) + 1)*(sin(pi*geom:xl/15) + 3*cos(pi*geom:xl/15) + 2*cos(2*pi*geom:xl/15) + cos(pi*geom:xl/5))*cos(2*z) + 6
======================================================================================================================================


Gaussian with sinus and parabola
======================================================================================================================================
# Gaussian with sinus and parabola

# The skew sinus
# In cartesian coordinates we would like a sinus with with a wave-vector in the direction
# 45 degrees with respect to the first quadrant. This can be achieved with a wave vector
# k = [1/sqrt(2), 1/sqrt(2)]
# sin((1/sqrt(2))*(x + y))
# We would like 2 nodes, so we may write
# sin((1/sqrt(2))*(x + y)*(2*pi/(2*Lx)))
# Rewriting this to cylindrical coordinates, gives
# sin((1/sqrt(2))*(x*(cos(z)+sin(z)))*(2*pi/(2*Lx)))

# The gaussian
# In cartesian coordinates we would like
# f = exp(-(1/(2*w^2))*((x-x0)^2 + (y-y0)^2))
# In cylindrical coordinates, this translates to
# f = exp(-(1/(2*w^2))*(x^2 + y^2 + x0^2 + y0^2 - 2*(x*x0+y*y0) ))
#   = exp(-(1/(2*w^2))*(rho^2 + rho0^2 - 2*rho*rho0*(cos(theta)*cos(theta0)+sin(theta)*sin(theta0)) ))
#   = exp(-(1/(2*w^2))*(rho^2 + rho0^2 - 2*rho*rho0*(cos(theta - theta0)) ))

# A parabola
# In cartesian coordinates, we have
# ((x-x0)/Lx)^2
# Chosing this function to have a zero value at the edge yields in cylindrical coordinates
# ((x*cos(z)+Lx)/(2*Lx))^2

w = 0.8*Lx
rho0 = 0.3*Lx
theta0 = 5*pi/4
the_vars['f'] = sin((1/sqrt(2))*(x*(cos(z)+sin(z)))*(2*pi/(2*Lx)))*\
                exp(-(1/(2*w**2))*(x**2 + rho0**2 - 2*x*rho0*(cos(z - theta0)) ))*\
                ((x*cos(z)+Lx)/(2*Lx))**2





[f]
0.932102492359528*(geom:xl*cos(z)/60 + 1/2)^2*exp(-0.000868055555555556*geom:xl^2 - 0.015625*geom:xl*sin(z + pi/4))*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60)

[S]
(-0.000258917358988758*(6.02816358024691e-6*geom:xl + 5.42534722222222e-5*sin(z + pi/4))*(0.00173611111111111*geom:xl + 0.015625*sin(z + pi/4))*(geom:xl*cos(z) + 30)^2*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) + 1.72611572659172e-5*sqrt(2)*pi*(6.02816358024691e-6*geom:xl + 5.42534722222222e-5*sin(z + pi/4))*(geom:xl*cos(z) + 30)^2*(sin(z) + cos(z))*cos(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) + 0.00207133887191006*(6.02816358024691e-6*geom:xl + 5.42534722222222e-5*sin(z + pi/4))*(geom:xl*cos(z) + 30)*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60)*cos(z) + 0.000258917358988758*(0.00173611111111111*geom:xl + 0.015625*sin(z + pi/4))^4*(geom:xl*cos(z) + 30)^2*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) - 1.72611572659172e-5*sqrt(2)*pi*(0.00173611111111111*geom:xl + 0.015625*sin(z + pi/4))^3*(geom:xl*cos(z) + 30)^2*(sin(z) + cos(z))*cos(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) - 0.00207133887191006*(0.00173611111111111*geom:xl + 0.015625*sin(z + pi/4))^3*(geom:xl*cos(z) + 30)*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60)*cos(z) - 8.63057863295859e-7*pi^2*(0.00173611111111111*geom:xl + 0.015625*sin(z + pi/4))^2*(geom:xl*cos(z) + 30)^2*(sin(z) + cos(z))^2*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) - 1.79803721519971e-6*(0.00173611111111111*geom:xl + 0.015625*sin(z + pi/4))^2*(geom:xl*cos(z) + 30)^2*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) + 0.000103566943595503*sqrt(2)*pi*(0.00173611111111111*geom:xl + 0.015625*sin(z + pi/4))^2*(geom:xl*cos(z) + 30)*(sin(z) + cos(z))*cos(z)*cos(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) + 0.00310700830786509*(0.00173611111111111*geom:xl + 0.015625*sin(z + pi/4))^2*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60)*cos(z)^2 + 9.58953181439843e-9*sqrt(2)*pi^3*(0.00173611111111111*geom:xl + 0.015625*sin(z + pi/4))*(geom:xl*cos(z) + 30)^2*(sin(z) + cos(z))^3*cos(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) + 2.99672869199951e-8*sqrt(2)*pi*(0.00173611111111111*geom:xl + 0.015625*sin(z + pi/4))*(geom:xl*cos(z) + 30)^2*(sin(z) + cos(z))*cos(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) + 3.45223145318344e-6*pi^2*(0.00173611111111111*geom:xl + 0.015625*sin(z + pi/4))*(geom:xl*cos(z) + 30)*(sin(z) + cos(z))^2*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60)*cos(z) + 3.59607443039941e-6*(0.00173611111111111*geom:xl + 0.015625*sin(z + pi/4))*(geom:xl*cos(z) + 30)*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60)*cos(z) - 0.000103566943595503*sqrt(2)*pi*(0.00173611111111111*geom:xl + 0.015625*sin(z + pi/4))*(sin(z) + cos(z))*cos(z)^2*cos(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) + 7.99127651199869e-11*pi^4*(geom:xl*cos(z) + 30)^2*(sin(z) + cos(z))^4*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) + 1.49836434599975e-9*pi^2*(geom:xl*cos(z) + 30)^2*(sin(z) + cos(z))^2*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) + 2.34119429062462e-9*(geom:xl*cos(z) + 30)^2*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) - 1.91790636287969e-8*sqrt(2)*pi^3*(geom:xl*cos(z) + 30)*(sin(z) + cos(z))^3*cos(z)*cos(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) - 1.79803721519971e-7*sqrt(2)*pi*(geom:xl*cos(z) + 30)*(sin(z) + cos(z))*cos(z)*cos(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) - 1.72611572659172e-6*pi^2*(sin(z) + cos(z))^2*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60)*cos(z)^2 - 5.39411164559912e-6*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60)*cos(z)^2)*exp(-geom:xl*(0.000868055555555556*geom:xl + 0.015625*sin(z + pi/4)))


[neumann]
0.932102492359528*(-0.00173611111111111*geom:xl - 0.015625*sin(z + pi/4))*(geom:xl*cos(z)/60 + 1/2)^2*exp(-0.000868055555555556*geom:xl^2 - 0.015625*geom:xl*sin(z + pi/4))*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) + 0.0155350415393255*sqrt(2)*pi*(geom:xl*cos(z)/60 + 1/2)^2*(sin(z) + cos(z))*exp(-0.000868055555555556*geom:xl^2 - 0.015625*geom:xl*sin(z + pi/4))*cos(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60) + 0.0310700830786509*(geom:xl*cos(z)/60 + 1/2)*exp(-0.000868055555555556*geom:xl^2 - 0.015625*geom:xl*sin(z + pi/4))*sin(sqrt(2)*pi*geom:xl*(sin(z) + cos(z))/60)*cos(z)
======================================================================================================================================



Gaussian
======================================================================================================================================
# The gaussian

# In cartesian coordinates we would like
# f = exp(-(1/(2*w^2))*((x-x0)^2 + (y-y0)^2))
# In cylindrical coordinates, this translates to
# f = exp(-(1/(2*w^2))*(x^2 + y^2 + x0^2 + y0^2 - 2*(x*x0+y*y0) ))
#   = exp(-(1/(2*w^2))*(rho^2 + rho0^2 - 2*rho*rho0*(cos(theta)*cos(theta0)+sin(theta)*sin(theta0)) ))
#   = exp(-(1/(2*w^2))*(rho^2 + rho0^2 - 2*rho*rho0*(cos(theta - theta0)) ))
w = 0.5*Lx
rho0 = 0.2*Lx
theta0 = pi
the_vars['f'] = exp(-(1/(2*w**2))*(x**2 + rho0**2 - 2*x*rho0*(cos(z - theta0)) ))


[S]
(-0.923116346386636*(3.95061728395062e-5*geom:xl + 0.000237037037037037*cos(z))*(0.00444444444444444*geom:xl + 0.0266666666666667*cos(z)) + 0.923116346386636*(0.00444444444444444*geom:xl + 0.0266666666666667*cos(z))^4 - 0.0164109572690957*(0.00444444444444444*geom:xl + 0.0266666666666667*cos(z))^2 + 5.47031908969858e-5)*exp(-geom:xl*(0.00222222222222222*geom:xl + 0.0266666666666667*cos(z)))

[f]
0.923116346386636*exp(-0.00222222222222222*geom:xl^2 - 0.0266666666666667*geom:xl*cos(z))

[neumann]
0.923116346386636*(-0.00444444444444444*geom:xl - 0.0266666666666667*cos(z))*exp(-0.00222222222222222*geom:xl^2 - 0.0266666666666667*geom:xl*cos(z))
======================================================================================================================================