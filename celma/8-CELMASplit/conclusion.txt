Copied from 5.2-CELMAWNoisFilterRho

- Made model split
  NOTE: The split is ignored for non-split solvers, and the rhs will simply be
        the sum of the split
- Parallel current terms now combined (numerical operators should resemble
  conserved quantities)
- Changed Grad_par with DDY (Grad_par divides by sqrt(g_22))


Results:
========
Getting backgrounds with nz = 2
-------------------------------
I.e. runs with a leading 0 in their serial number
NOTE: No perturbations
NOTE IMEX FIXED STEP:
    Initially tried with timestep 1.0e0, but SNES failed reason -6
    Initially tried with timestep 1.0e-1, but SNES failed reason -3
Finish ordering (best to worst)
0-a-2 - 1h 11m
0-a-1 - 1h 18m
0-a-0 - 1h 21m
0-b-0 - Completed 9 steps, killed by walltime
0-b-1 - Completed 9 steps, killed by walltime
0-b-2 - Completed 9 steps, killed by walltime
0-c-0 - Completed 2 steps, killed by walltime
0-c-1 - Completed 2 steps, killed by walltime
0-c-2 - Completed 2 steps, killed by walltime


Expanding to 128
----------------
I.e. runs with a leading 1 in their serial number
NOTE: No perturbations
1-a-0 - 1h 41m
1-a-1 - 1h 52m
1-a-2 - 2h  1m

Can see that current is fluctuation a bit (however on a small level)



Checking if more density speeds up calculation
----------------------------------------------
0-d-0 - Finished after 41 m 29 s
1-d-0 - Finished after 1h 28m

NOTE: Density not really changed as compared with with the "a-data" runs


Improve the density by changing the source
------------------------------------------
0-e-0 sAmp 0.05  : Finished after 21 m, max dens around 2.6
0-e-0 sAmp 0.025 : Finished after 18 m, max dens around 1.4
0-e-0 sAmp 0.020 : Finished after 19 m, max dens around 1.0
0-e-0 sAmp 0.0175: Finished after 19 m, max dens around 0.88

Expand
------
1-e-0 : Finished after 18 m


Adding noise with filter
------------------------
2-a-0.0 : Finished 27 steps, killed by walltime (12 h)
2-a-1.0 : Finished 31 steps, killed by walltime (12 h)
2-a-2.0 : Finished 27 steps, killed by walltime (12 h)
2-e-0   : Finished 79 steps, cvode timestep failed


Adding noise with hypervisc
---------------------------
2-a-0.1 : Finished 35 steps, timestep failed (10h 40m)
2-a-1.1 : Finished 50 steps, killed by walltime (12 h)
2-a-2.1 : Finished 31 steps, killed by walltime (12 h)


Restarting with filter
----------------------
3-a-0.0 : Finished 2 timesteps, then cvode failed -4 (6h)


Restarting with hypervisc
-------------------------
3-a-1.1 : Finished after 6 h 9 m
3-a-2.1 : Finished 2 timesteps, then failed in Naulin solver (7h 41m)
4-a-1.1 : Finished after 5 h 59 m
5-a-1.1 : Running


Check why fails
---------------
I2-a-0.1 : Running
I2-e-0   : Running
I3-a-0.0 : Running
I3-a-2.1 : Running


FIXME: Bug with tind


Ideas:
------
Could in principle check for difference in hypervisc
(this would be more important when more z points)

Coloring







Python snippets
===============
Checked that the data is correct with
-------------------------------------
    from boututils.from boututils.datafile import DataFile_netCDF
    f = DataFile_netCDF(filename="BOUT.restart.0.nc")
    f.read("vortD")
    vortD = f.read("vortD")


Checking stiffness
-------------------
# NOTE: Watch out for high variation in the data
import numpy as np
from boutdata import collect
vars = ['ddt(lnN)', 'ddt(uIPar)', 'ddt(uEPar)', 'ddt(vortD)']
for var in vars:
    data = collect(var, info=False)
    print("{:10}:    Max={:.3e}    Var={:.3e}".format(var, np.max(np.abs(data)), np.var(data)))
